#include "base.h"
#include "colors.h"

static const RGBd scale[] = {
//   {.5, 0, 0},
//   {1., 0, 0},
//   {1., 1., 0},
//   {0, 1., 0},
//   {0, 1., 1.},
//   {0, 0, 1.},
//   {1., 0, 1.}
  {0.471412, 0.108766, 0.527016},
  {0.34313, 0.115817, 0.636978},
  {0.274861, 0.182264, 0.727279},
  {0.248069, 0.279728, 0.787925},
  {0.248488, 0.386326, 0.813373},
  {0.266122, 0.486664, 0.802529},
  {0.29796, 0.565793, 0.752239},
  {0.338656, 0.627685, 0.683282},
  {0.388225, 0.674195, 0.603544},
  {0.446557, 0.707463, 0.520393},
  {0.513417, 0.72992, 0.440682},
  {0.588804, 0.740958, 0.375007},
  {0.666083, 0.743042, 0.322935},
  {0.740842, 0.734018, 0.283832},
  {0.808342, 0.711081, 0.255976},
  {0.863512, 0.670771, 0.236564},
  {0.893514, 0.600415, 0.220546},
  {0.902117, 0.505509, 0.201825},
  {0.892955, 0.389662, 0.179401},
  {0.873957, 0.260788, 0.15481},
  {0.857359, 0.131106, 0.132128}
};
constexpr int N = sizeof(scale) / sizeof(scale[0]);

RGBd discrete_linear_color_scale(colreal_t low, colreal_t mid, colreal_t high) {
  int k = N * (mid - low) / (high - low);
  if (k < 0) k = 0;
  else if (k >= N) k = N - 1;
  return scale[k];
}

RGBd linear_color_scale(colreal_t low, colreal_t mid, colreal_t high) {
  return linear_interpolation(scale, N, low, mid, high);
}
